{"version":3,"sources":["components/HomeNav.jsx","components/Categories.jsx","components/Price.jsx","components/Result.jsx","components/Home.jsx","components/Restaurants.jsx","components/App.jsx","index.js"],"names":["HomeNav","useState","isOpen","setIsOpen","Navbar","color","NavbarBrand","href","Nav","className","Button","onClick","NavLink","Collapse","Card","CardBody","Container","Categories","props","categories","setCategories","dropdownOpen","setDropdownOpen","dropdownValue","setDropdownValue","changeValue","event","target","textContent","setCat","useEffect","fetch","then","res","json","data","Dropdown","toggle","prevState","size","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","map","category","key","id","name","Price","setPrice","Result","src","alt","pricePoints","Home","restaurants","setRestaurants","setCategory","price","selected","setSelected","showResult","setShowResult","Form","FormGroup","cat","p","style","fontFamily","type","console","log","tmp","filter","rest","ran","Math","random","length","floor","preventDefault","Restaurants","ListGroup","ListGroupItem","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a3f9cc0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Nav, Navbar, NavLink, NavbarBrand, Collapse, Card, CardBody, Container, Button } from 'reactstrap';\r\n\r\nfunction HomeNav() {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"danger\">\r\n                <NavbarBrand href=\"/\">LET'S EAT</NavbarBrand>\r\n                <Nav className=\"ml-auto\">\r\n                    <Button onClick={toggle} color=\"danger\">About</Button>\r\n                    <NavLink href=\"/restaurants\">Restaurants</NavLink>\r\n                </Nav>\r\n            </Navbar>\r\n            <Collapse isOpen={isOpen}>\r\n                <Card>\r\n                    <CardBody>\r\n                        <Container>\r\n                        <h4>Can't decide where to eat?</h4>\r\n                        <p><span className=\"brand-font\">LET'S EAT</span> will help you pick a place that you'd like. Filters can be added for a better match.</p>\r\n                        \r\n                        </Container>\r\n                    \r\n                    </CardBody>\r\n                </Card>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeNav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\n\r\nfunction Categories(props) {\r\n    const [categories, setCategories] = useState([]);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [dropdownValue, setDropdownValue] = useState(\"Anything\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://infinite-dawn-76227.herokuapp.com/category\")\r\n            .then(res => res.json())\r\n            .then(data => setCategories(data));\r\n            \r\n    }, [])\r\n\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    function changeValue(event) {    \r\n        setDropdownValue(event.target.textContent);\r\n        \r\n        props.setCat(event.target.textContent);\r\n    }\r\n    \r\n    return (\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle} size=\"md\">\r\n        <DropdownToggle caret color=\"light\">{dropdownValue}</DropdownToggle>\r\n        <DropdownMenu>\r\n            <DropdownItem onClick={changeValue}>Anything</DropdownItem>\r\n            <DropdownItem divider />\r\n            {categories.map(category =>\r\n                <DropdownItem key={category.id} onClick={changeValue}>{category.name}</DropdownItem>\r\n            )}\r\n        </DropdownMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default Categories;","import React, { useState } from \"react\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\n\r\nfunction Price(props) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [dropdownValue, setDropdownValue] = useState(\"Any Amount\");\r\n    \r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    function changeValue(event) {    \r\n        setDropdownValue(event.target.textContent);\r\n        props.setPrice(event.target.textContent);\r\n    }\r\n\r\n    return (\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle} size=\"md\">\r\n        <DropdownToggle caret color=\"light\">{dropdownValue}</DropdownToggle>\r\n        <DropdownMenu>\r\n            <DropdownItem onClick={changeValue}>Any Amount</DropdownItem>\r\n            <DropdownItem divider />\r\n            <DropdownItem onClick={changeValue}>$</DropdownItem>\r\n            <DropdownItem onClick={changeValue}>$$</DropdownItem>\r\n            <DropdownItem onClick={changeValue}>$$$</DropdownItem>\r\n        </DropdownMenu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nexport default Price;","import React from \"react\";\r\n\r\nfunction Result(props) {\r\n    return (\r\n        <div className=\"myContainer resultContainer\">\r\n            <h2 className=\"result-heading\">LET'S EAT ...</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 img-fluid\">\r\n                    <img className=\"img-fluid placeholder-img\" src=\"https://via.placeholder.com/150\" alt=\"placeholer\"/>\r\n                </div> \r\n                <div className=\"description col-sm-8\">\r\n                    <h3>{props.name}</h3>\r\n                    <div className=\"txt\">{props.pricePoints}</div>\r\n                    <div className=\"txt\">{props.category}</div>\r\n                </div>\r\n            \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Result; ","import React, { useState, useEffect } from \"react\";\r\nimport HomeNav from \"./HomeNav\";\r\nimport Categories from \"./Categories\";\r\nimport Price from \"./Price\";\r\nimport { Button, Form, FormGroup } from \"reactstrap\";\r\nimport Result from \"./Result\";\r\n\r\nfunction Home() {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [category, setCategory] = useState(\"Anything\");\r\n    const [price, setPrice] = useState(\"Any Amount\");\r\n    const [selected, setSelected] = useState({\r\n        id: \"\",\r\n        name: \"\",\r\n        pricePoints: \"\",\r\n        category: \"\"\r\n    });\r\n    const [showResult, setShowResult] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://infinite-dawn-76227.herokuapp.com/restaurants\")\r\n            .then(res => res.json())\r\n            .then(data => setRestaurants(data));\r\n            \r\n    }, []);\r\n    \r\n    function getRestaurant(event) {  \r\n        console.log(category);\r\n        console.log(price);\r\n        let tmp = []\r\n        \r\n        if (category === \"Anything\" && price === \"Any Amount\"){            \r\n           tmp = ([...restaurants]);            \r\n        } \r\n        else if (category !== \"Anything\" && price === \"Any Amount\") {\r\n            tmp = (restaurants.filter(rest => {\r\n                    return (rest.category === category);\r\n                }));\r\n        } \r\n        else if (category === \"Anything\" && price !== \"Any Amount\") {\r\n            tmp = (restaurants.filter(rest => {\r\n                \r\n                return (rest.pricePoints === price);\r\n            }));\r\n        }   \r\n        else {\r\n            tmp = (restaurants.filter(rest => {\r\n                return (rest.category === category && rest.pricePoints === price);\r\n            })); \r\n        }           \r\n        let ran = Math.random() * tmp.length;\r\n        ran = Math.floor(ran);\r\n        setSelected(tmp[ran]);  \r\n        console.log(tmp);\r\n        console.log(ran);\r\n        console.log(tmp[ran]);\r\n        \r\n        console.log(selected);\r\n        \r\n        setShowResult(true);        \r\n        \r\n        event.preventDefault();\r\n    }   \r\n    \r\n    return (\r\n        <div>\r\n            <HomeNav />\r\n            <div className=\"myContainer\">\r\n                <Form>\r\n                    <div className=\"insideContainer\">\r\n                        \r\n                            <FormGroup>\r\n                                <h4 className=\"headings\">What are you feeling for?</h4>\r\n                                {/* <Categories setCat={cat => {getRestaurantByCategory(cat)}} /> */}\r\n                                <Categories setCat={cat => setCategory(cat)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <h4>How much do you want to spend?</h4>\r\n                                {/* <Price setPrice={cat => {getRestaurantByCategory(cat)}} /> */}\r\n                                <Price setPrice={p => setPrice(p)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Button\r\n                                    color=\"danger\"\r\n                                    style={{ fontFamily: \"Contrail One\" }}\r\n                                    type=\"submit\"\r\n                                    onClick={getRestaurant}>\r\n                                    LET'S EAT\r\n                                </Button>\r\n                            </FormGroup>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n            <div >\r\n                {showResult && <Result name={selected.name} pricePoints={selected.pricePoints} category={selected.category} />}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport HomeNav from \"./HomeNav\";\r\n\r\nfunction Restaurants(){\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        fetch(\"https://infinite-dawn-76227.herokuapp.com/restaurants\")\r\n            .then(res => res.json())\r\n            .then(data => setRestaurants(data));\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <HomeNav />\r\n            <title></title>\r\n            <div className=\"myContainer\">\r\n                <ListGroup>\r\n                    {restaurants.map(rest => \r\n                        <ListGroupItem key={rest.id}>\r\n                           <h5>{rest.name}</h5> \r\n                            <div>{rest.pricePoints}</div>\r\n                            <div>{rest.category}</div>\r\n                        </ListGroupItem>\r\n                    )}\r\n                    \r\n                </ListGroup>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Restaurants;","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch, HashRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Restaurants from './Restaurants';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      \r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/restaurants\" exact component={Restaurants} />\r\n        \r\n      {/* <Router>\r\n        <Switch>\r\n         \r\n        </Switch>\r\n      </Router> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));"],"sourceRoot":""}